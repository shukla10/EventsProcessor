[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '/Users/shashank/Desktop/logfile.txt ' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@54e7391d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@54e7391d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54e7391d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c8bdd5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a7b503d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@1bc53649
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@2fa7ae9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@2fa7ae9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2fa7ae9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@10b3df93
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@10b3df93
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@10b3df93
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@24855019
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@24855019
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24855019
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@12f3afb5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@12f3afb5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@12f3afb5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@27dc79f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@27dc79f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@27dc79f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3ad394e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3ad394e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3ad394e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@6f6a7463
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@6f6a7463
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f6a7463
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3a7704c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3a7704c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3301500b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3301500b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@36dce7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@36dce7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7692cd34
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@70f43b45
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@3e792ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e792ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1968a49c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1968a49c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@5fd9b663
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5fd9b663
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6548bb7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6548bb7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b5f8707
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b5f8707
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@51bde877
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@51bde877
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a1d3c1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a1d3c1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ac4944a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ac4944a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ee55e70
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ee55e70
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@31198ceb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31198ceb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@3d9fc57a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d9fc57a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@25230246
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25230246
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25230246
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6979efad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@6650813a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6650813a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6650813a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30457e14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@c1a4620
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@77e2a6e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77e2a6e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@5bf61e67
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5bf61e67
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@51671b08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@51671b08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@26f3d90c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26f3d90c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c2d4cc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c2d4cc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71b1a49c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@3b0f7d9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b0f7d9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@3b0f7d9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53cdecf6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53cdecf6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53cdecf6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b43e173
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@22fa55b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@6c2f1700
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c2f1700
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@6c2f1700
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5298dead
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5298dead
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5298dead
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5ab9b447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@15b986cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@742d4e15
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@7cf7aee
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cf7aee
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@60297f36
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@7f4d9395
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f4d9395
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79c5636f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1929425f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27f3b6d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@676f0a60
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d10455d
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f4b840d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31464a43]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=validate, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ac4ccad, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f4b840d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d21202d]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74834afd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24c8d8be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5482bcac] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@603cabc4
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: d90e55ab-1de2-46d1-b7b3-3160ddb8b75d (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@40c06358
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '/Users/shashank/Desktop/logfile.txt ' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '/Users/shashank/Desktop/logfile.txt ' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '/Users/shashank/Desktop/logfile.txt ' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '{"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4d157787
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4d157787
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d157787
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54e7391d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c8bdd5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a7b503d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@751e664e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@751e664e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@751e664e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@3153ddfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@3153ddfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3153ddfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@e72dba7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@e72dba7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e72dba7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@610db97e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@610db97e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@610db97e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@7bd69e82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@7bd69e82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7bd69e82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@5cbf9e9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@5cbf9e9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5cbf9e9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1deb2c43
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1deb2c43
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1deb2c43
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ca320ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ca320ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@323e8306
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@323e8306
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@6e9c413e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@6e9c413e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36dce7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7692cd34
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7dd712e8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7dd712e8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@3c1e3314
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3c1e3314
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@74a9c4b0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@74a9c4b0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@e362c57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@e362c57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1556f2dd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1556f2dd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@79ab3a71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@79ab3a71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117632cf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117632cf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@57dc9128
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@57dc9128
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b718392
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3b718392
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@530a8454
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@530a8454
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@aa5455e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@aa5455e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5987e932
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5987e932
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5987e932
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25230246
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@17f9344b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@17f9344b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@17f9344b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44ea608c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@20765ed5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@4c432866
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4c432866
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@6e0d4a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6e0d4a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4e7095ac
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4e7095ac
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@b09fac1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b09fac1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@74518890
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@74518890
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6c2d4cc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@589b028e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@589b028e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@589b028e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63034ed1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63034ed1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63034ed1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@420745d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@5b43e173
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@30f4b1a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@30f4b1a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@30f4b1a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@669d2b1b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@669d2b1b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@669d2b1b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5298dead
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@5ab9b447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5c09d180
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5c09d180
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@26f1249d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26f1249d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf7aee
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@894858
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@181d7f28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@181d7f28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f4d9395
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a078481
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79c5636f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1929425f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@27f3b6d6
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b10a26d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74075134]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51288417, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b10a26d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5633ed82]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75fd65c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3290b1a6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.SQL  - drop table if exists EventDB CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1946384] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table EventDB (id varchar(255) not null, alert boolean not null, duration bigint not null, host varchar(255), type varchar(255), primary key (id))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4ac8768e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a7df831
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: d1e35d96-af41-4002-bd84-bccba056ef8f (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@40ce9049
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '/Users/shashank/Desktop/logfile.txt ' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3e58d65e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3e58d65e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3e58d65e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@61942c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e6ba49a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@18388a3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6622a690
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6622a690
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6622a690
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@a8a8b75
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@a8a8b75
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a8a8b75
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6ea94d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6ea94d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ea94d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7d151a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7d151a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d151a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7bc9e6ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7bc9e6ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bc9e6ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@45673f68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@45673f68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1efdcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1efdcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@89c65d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@89c65d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@62515a47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@417ad4f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@aa21042
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@aa21042
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@d0ec63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d0ec63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@759d81f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@759d81f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@389562d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@389562d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b410923
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b410923
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6eafb10e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6eafb10e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@757529a4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@757529a4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c68a5f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c68a5f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6999cd39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6999cd39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@591fd34d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@591fd34d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@585ac855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@585ac855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@585ac855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@516ebdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@a619c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a619c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a619c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6331250e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@5f462e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f462e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@69ce2f62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@69ce2f62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@732bb66d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@732bb66d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1517f633
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1517f633
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4565a70a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@2e3a5237
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@35c09b94
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@17ae7628
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@17ae7628
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@17ae7628
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@286b39c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@286b39c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@286b39c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6d467c87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@2c779e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@11653e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@11653e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16fe9c29
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@6b580b88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b580b88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7004e3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7c28c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@695a69a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30af7377
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dab9dd6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@247667dd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6f099cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@afb5821
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bff2185
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c20ffa8
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4088741b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16a49a5d]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@77865933, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4088741b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@d7109be]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@679dd234]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0c3951]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.SQL  - drop table if exists EventDB CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5bde57ab] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table EventDB (id varchar(255) not null, alert boolean not null, duration bigint not null, host varchar(255), type varchar(255), primary key (id))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@794f11cd] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d54d0f5
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 1ec05894-4537-41c7-86ba-ace54b627ff6 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@50211483
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3e58d65e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3e58d65e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3e58d65e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@61942c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e6ba49a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@18388a3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6622a690
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6622a690
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6622a690
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@a8a8b75
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@a8a8b75
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a8a8b75
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6ea94d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6ea94d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ea94d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7d151a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7d151a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d151a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7bc9e6ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7bc9e6ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bc9e6ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@45673f68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@45673f68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1efdcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1efdcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@89c65d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@89c65d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@62515a47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@417ad4f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@aa21042
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@aa21042
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@d0ec63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d0ec63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@759d81f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@759d81f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@389562d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@389562d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b410923
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b410923
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6eafb10e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6eafb10e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@757529a4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@757529a4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c68a5f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c68a5f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6999cd39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6999cd39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@591fd34d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@591fd34d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@585ac855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@585ac855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@585ac855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@516ebdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@a619c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a619c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a619c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6331250e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@5f462e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f462e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@69ce2f62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@69ce2f62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@732bb66d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@732bb66d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1517f633
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1517f633
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4565a70a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@2e3a5237
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@35c09b94
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@17ae7628
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@17ae7628
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@17ae7628
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@286b39c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@286b39c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@286b39c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6d467c87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@2c779e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@11653e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@11653e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16fe9c29
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@6b580b88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b580b88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7004e3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7c28c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@695a69a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30af7377
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dab9dd6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@247667dd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6f099cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@afb5821
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bff2185
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c20ffa8
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 10 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23592946] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3e48d38]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=validate, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=10, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@44032fde, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=10, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23592946] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7b27e8f4]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f9d4b0e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fde8f7c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@23ca36d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@49c099b
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 5d611cf1-3ce9-49ff-bf44-43d3dbeff662 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10106 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@491f8831
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f5b5ca4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f6bcf87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67207d8a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2189e7a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7c2327fa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b60c3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@2d0bfb24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@38499e48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@27068a50
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@baf1bb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3703bf3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@40021799
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@afb5821
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bff2185
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c20ffa8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7fedfe27
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f879bab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@46c00568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ccd751
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 10 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@444cc791] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c5c616f]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=validate, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=10, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f1a16fe, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=10, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@444cc791] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e67f5f2]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bbfc5ff]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f171912]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3cc053] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4fba8eec
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 15bede08-1dbf-4da5-9d4d-3a68259f7ae6 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6a2d867d
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@10027fc9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@10027fc9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@10027fc9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c00fff0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51768776
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f3c6ac4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5c77053b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5c77053b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c77053b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@48f5bde6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@48f5bde6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48f5bde6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@5707c1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@5707c1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5707c1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@72efb5c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@72efb5c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@72efb5c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@324c64cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@324c64cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@324c64cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@120f38e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@120f38e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@120f38e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@3b1bb3ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@3b1bb3ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3b1bb3ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37d80fe7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37d80fe7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@15bcf458
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@15bcf458
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@69adf72c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@69adf72c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51650883
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@499b2a5c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@615f972
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@615f972
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4362d7df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4362d7df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@2a551a63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a551a63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32f61a31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32f61a31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@344561e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@344561e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@52d10fb8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@52d10fb8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@324dcd31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@324dcd31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ecf9fb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ecf9fb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3caa4757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3caa4757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@c8b96ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@c8b96ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@6e0ff644
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6e0ff644
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5167268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5167268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5167268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1af7f54a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@50b8ae8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50b8ae8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50b8ae8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40e4ea87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@88d6f9b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2fa7ae9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2fa7ae9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@10b3df93
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10b3df93
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@24855019
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24855019
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@12f3afb5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12f3afb5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27dc79f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27dc79f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18e8473e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@1cefc4b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@1cefc4b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@1cefc4b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e53135d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e53135d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e53135d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4acf72b6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@15deb1dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@33d05366
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@33d05366
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@33d05366
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26d10f2e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26d10f2e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26d10f2e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@22ee2d0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@26f143ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@13c612bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13c612bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@41de5768
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@61a5b4ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61a5b4ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@6bd51ed8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6bd51ed8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d4d48a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b02e036
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@66b72664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@54336c81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54336c81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@49bd54f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b5f8707
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@772485dd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a12c728
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79ab3a71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3d829787
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71652c98
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 10 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bc9a775] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27b000f7]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=validate, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=10, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ec7bce0, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=10, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bc9a775] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@77ec6a3d]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d0cb3a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a90c13c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2f10f633] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7f7b6639
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 33fe2e24-0518-47f7-a40d-ac1234e6bb70 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2accaec2
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
