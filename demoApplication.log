[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:53)
	at EventProcessing.main(EventProcessing.java:31)
[main] ERROR EventProcessing  - Exception during serialization of line : {"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.util.ArrayList<Event>` out of START_OBJECT token
 at [Source: (String)"{"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}"; line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1468)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1242)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1190)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:337)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:270)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4524)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3466)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:56)
	at EventProcessing.main(EventProcessing.java:31)
[main] ERROR EventProcessing  - Exception during serialization of line : {"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.util.ArrayList<Event>` out of START_OBJECT token
 at [Source: (String)"{"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}"; line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1468)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1242)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1190)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:337)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:270)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4524)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3466)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:56)
	at EventProcessing.main(EventProcessing.java:31)
[main] ERROR EventProcessing  - Exception during serialization of line : {"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.util.ArrayList<Event>` out of START_OBJECT token
 at [Source: (String)"{"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}"; line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1468)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1242)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1190)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:337)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:270)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4524)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3466)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:56)
	at EventProcessing.main(EventProcessing.java:31)
[main] ERROR EventProcessing  - Exception during serialization of line : {"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "id" (class Event), not marked as ignorable (0 known properties: ])
 at [Source: (String)"{"id":"scsmbstgra", "state":"STARTED", "type":"APPLICATION_LOG", "host":"12345", "timestamp":1491377495212}"; line: 1, column: 8] (through reference chain: Event["id"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:855)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1212)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1604)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1582)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:299)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:156)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4524)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3466)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3434)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:56)
	at EventProcessing.main(EventProcessing.java:31)
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@742d4e15
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@867ba60
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a78dacd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7dc51783
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aeaadc1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e411d81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@32fdec40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4fe01805
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5767b2af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62a8fd44
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@383f3558
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@49b07ee3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@352e612e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2424686b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6ea94d6a
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@742d4e15
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@867ba60
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a78dacd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7dc51783
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aeaadc1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e411d81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@32fdec40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4fe01805
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5767b2af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62a8fd44
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eea9d2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@bd2f5a9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d4960c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7808fb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@773bd77b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b580b88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6d91790b
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@742d4e15
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@867ba60
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a78dacd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7dc51783
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aeaadc1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e411d81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@32fdec40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4fe01805
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5767b2af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62a8fd44
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ad6fa53
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@55ea2d70
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e742e4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a03bb68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e868ef5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71c905a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30af7377
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@742d4e15
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f574cc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@53bf7094
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b1637e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1bf0f6f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@737edcfa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f330eb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4010d494
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@cda4919
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@718607eb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@867ba60
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@456abb66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70d8de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2c30b71f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2577d6c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43d455c9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@c7a977f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4287d447
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15515c51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3956b302
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@680362a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@238ad8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a78dacd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7dc51783
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4aeaadc1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78f9ed3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@110844f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f2afe62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5339bbad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e411d81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7dcc91fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5f8890c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@32fdec40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@29d37757
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4fe01805
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5767b2af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f4f9acd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62a8fd44
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1917d90f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66bfd864
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4aac85fa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21fff664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6079cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e6308a9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30cecdca
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6edc4161
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.readFromDb(EventProcessing.java:89)
	at EventProcessing.main(EventProcessing.java:49)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bb7cce7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@678040b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@18ca3c62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@535b8c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e63cad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ce93c18
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f815e7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29006752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f9e1534
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@3e598df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5d28bcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@3887cf88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@265c5d69
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@705202d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63998bf4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@18388a3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@701a32
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73aff8f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27ead29e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@383f3558
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bb7cce7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@678040b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@18ca3c62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@535b8c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e63cad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ce93c18
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f815e7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29006752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f9e1534
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@3e598df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5d28bcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@3887cf88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@265c5d69
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@705202d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63998bf4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@18388a3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e52fb3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16fe9c29
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4525d1d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c974942
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1eea9d2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd2f5a9
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bb7cce7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@678040b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@18ca3c62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@535b8c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e63cad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ce93c18
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f815e7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29006752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f9e1534
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@3e598df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5d28bcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@3887cf88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@265c5d69
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@705202d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63998bf4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@18388a3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@264c5d07
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@847f3e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69cac930
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19593091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6ad6fa53
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55ea2d70
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e742e4
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76f10035
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bb7cce7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@678040b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@18ca3c62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4163f1cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a9c84a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710b30ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64711bf2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@df4b72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74cf8b28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@584f5497
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4943defe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f19f2aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@757f675c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@535b8c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e63cad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b72c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7da10b5b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dedb4a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@ec50f54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c000e0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9ec531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d868997
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e6d7365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@e36bb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@13e9f2e2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7d0332e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22df874e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ce93c18
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2bfeb1ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34448e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f815e7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f14f20c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b0964b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@df1cff6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28782602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@288a4658
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29006752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@7fcff1b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a9287b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f9e1534
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@3e598df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1bd81830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25cc7470
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@5d28bcd5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@3887cf88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@323659f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@265c5d69
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@241a0c3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d2644e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@705202d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63998bf4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@18388a3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6df7988f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27b22f74
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22fba58c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7e8a46b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2fe88a09
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1917d90f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66bfd864
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4aac85fa
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.readFromDb(EventProcessing.java:89)
	at EventProcessing.main(EventProcessing.java:49)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] INFO  EventProcessing  - done!
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File 'jdbc:hsqldb:mem:/localhost' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:58)
	at EventProcessing.main(EventProcessing.java:29)
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e9df3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@65e7f52a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@138a7441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73aff8f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27ead29e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@383f3558
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@49b07ee3
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e9df3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@65e7f52a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@138a7441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16fe9c29
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4525d1d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7c974942
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1eea9d2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@bd2f5a9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d4960c8
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e9df3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@65e7f52a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@138a7441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@847f3e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69cac930
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19593091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ad6fa53
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55ea2d70
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e742e4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@175acfb2
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.writeToDb(EventProcessing.java:74)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f8caaf3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41c62850
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@17f460bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2c0f7678
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fa05212
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d83c5a5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a68df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@169da7f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ba45490
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36c54a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ace111
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eefa415
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@344b8190
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@2617f816
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a951911
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6759f091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55b5e331
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@219f4597
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@57f64f5e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@bf71cec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f233b26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40147317
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2c383e33
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c0da600
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3961a41a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@673bb956
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a356a0d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@654c1a54
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19f21b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@778ca8ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e9df3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@65e7f52a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7daa61f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48e7b3d2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4925f4f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60c16548
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b56b654
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470a9030
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@697446d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75504cef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@138a7441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@7e31ce0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@39ab59f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4beddc56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7882c44a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@5649ec46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1144a55a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1286528d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@547c04c4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4fa06f52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c443976
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e0b9178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27b22f74
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@22fba58c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e8a46b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2fe88a09
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1917d90f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66bfd864
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4aac85fa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21fff664
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.service.internal.AbstractServiceRegistryImpl  - HHH000369: Error stopping service [class org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl]
java.lang.NullPointerException
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:207)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.stopService(AbstractServiceRegistryImpl.java:390)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:373)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:129)
	at org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(StandardServiceRegistryBuilder.java:408)
	at Util.ConnectionUtil.getSessionFactory(ConnectionUtil.java:31)
	at EventProcessing.readFromDb(EventProcessing.java:89)
	at EventProcessing.main(EventProcessing.java:49)
[main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] INFO  EventProcessing  - done!
[main] ERROR EventProcessing  - drive no found
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  EventProcessing  - done!
[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File '        <property name="connection.url">jdbc:hsqldb:file:db-data/mydatabase</property>' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:65)
	at EventProcessing.main(EventProcessing.java:36)
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73aff8f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41a6d121
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@19f040ba
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61533ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5395ea39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1136b469
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b78fdb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1b9c1b51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1a5b8489
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34cf5a97
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30af7377
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d58c727
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52a36910
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54da32dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d782abe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6df7988f
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - Checkpoint start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - Checkpoint end - txts: 1
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fb65013] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38a1a26]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table events
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [events]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@265bd546, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fb65013] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47c40b56]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] INFO  org.hibernate.tuple.PojoInstantiator  - HHH000182: No default (no-argument) constructor for class: EventDB (class must be instantiated by Interceptor)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from events where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from events eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update events set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from events where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18dd5ed3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f992a3a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists events CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@160e99e0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table events (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7fdd43cd] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29d405e6
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: b166a3fc-ccfb-4883-b558-03d88d761a0f (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@433ea2ac
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] ERROR EventProcessing  - IO Exception while extracting events from file
java.io.FileNotFoundException: File 'class org.hibernate.engine.transaction.internal.Transa' does not exist
	at org.apache.commons.io.FileUtils.openInputStream(FileUtils.java:297)
	at org.apache.commons.io.FileUtils.lineIterator(FileUtils.java:1938)
	at EventProcessing.collectEventsFromFile(EventProcessing.java:65)
	at EventProcessing.main(EventProcessing.java:36)
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73aff8f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41a6d121
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@19f040ba
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61533ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5395ea39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1136b469
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b78fdb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1b9c1b51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1a5b8489
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34cf5a97
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30af7377
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d58c727
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52a36910
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54da32dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d782abe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6df7988f
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23706db8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@205bed61]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table events
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [events]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3291b443, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23706db8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@feb98ef]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] INFO  org.hibernate.tuple.PojoInstantiator  - HHH000182: No default (no-argument) constructor for class: EventDB (class must be instantiated by Interceptor)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from events where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from events eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update events set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from events where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67332b1e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@412c5e8b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists events CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@53aa2fc9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table events (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1ac6dd3d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ed5b321
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: bd119806-411a-4fac-952c-44064f6ff8fb (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrb, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrc, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@224c7de4
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} events eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [events]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [events eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (events)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.EventId as eventid1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=events,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'events eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=events,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from events eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from events eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] INFO  EventProcessing  - done!
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@701a32
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@701a32
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@701a32
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@27ead29e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@49b07ee3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6ea94d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@294bdeb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@294bdeb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@294bdeb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@5488b5c5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@5488b5c5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5488b5c5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27abb83e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27abb83e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27abb83e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@1623bbe5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@1623bbe5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1623bbe5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@faa3fed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@faa3fed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@faa3fed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@417ad4f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@417ad4f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@417ad4f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@aa21042
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@aa21042
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@aa21042
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d0ec63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d0ec63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14faa38c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14faa38c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@5baaae4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@5baaae4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@411291e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@27e32fe4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@3044e9c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3044e9c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@28952dea
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@28952dea
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@69c6161d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69c6161d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41e1455d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41e1455d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6999cd39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6999cd39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@534ca02b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@534ca02b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3068b369
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3068b369
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b0ca5e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b0ca5e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67207d8a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67207d8a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@25c5e994
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@25c5e994
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@70325d20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70325d20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ff57625
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@18fdb6cf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18fdb6cf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18fdb6cf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@720653c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4fe01803
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@599f571f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@599f571f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@65327f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@65327f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@349d0836
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@349d0836
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@4917d36b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4917d36b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4905c46b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4905c46b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b87581
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@6d467c87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@6d467c87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@6d467c87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@511d5d04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@511d5d04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@511d5d04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@11653e3b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@16fe9c29
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@4d4960c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@4d4960c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@4d4960c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ce90bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ce90bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ce90bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4b1c0397
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@cda0432
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@4482469c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4482469c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ddf20fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@1b32cd16
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b32cd16
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@55ea2d70
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@55ea2d70
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4e868ef5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1dab9dd6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@56ccd751
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@5e3a39cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e3a39cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52a36910
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@54da32dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d782abe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6df7988f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@27b22f74
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22fba58c
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e48d38] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c2b58c0]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table events
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [events]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@480ad82c, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e48d38] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5e0ec41f]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] INFO  org.hibernate.tuple.PojoInstantiator  - HHH000182: No default (no-argument) constructor for class: EventDB (class must be instantiated by Interceptor)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from events where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from events eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update events set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from events where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60cb1ed6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f77af]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists events CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ea00de] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table events (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@715f45c6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7eeb38b2
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 52388975-7047-4a83-b792-921b4e26d616 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrb, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrc, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@805e72e
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} events eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [events]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [events eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (events)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.EventId as eventid1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=events,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'events eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=events,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from events eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from events eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73aff8f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41a6d121
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@19f040ba
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61533ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5395ea39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1136b469
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b78fdb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1b9c1b51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1a5b8489
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34cf5a97
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30af7377
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d58c727
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52a36910
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54da32dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d782abe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6df7988f
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23592946]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table events
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(events), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [events]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53d13cd4, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@571a01f9]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] INFO  org.hibernate.tuple.PojoInstantiator  - HHH000182: No default (no-argument) constructor for class: EventDB (class must be instantiated by Interceptor)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from events where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from events eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update events set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from events where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e34b127]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@637791d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from events eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists events CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4792f119] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table events (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@562919fe] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5696c927
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 30ece312-b0dc-4bab-96c5-a4ab7804f02e (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrb, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrc, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into events (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@805e72e
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} events eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [events]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [events eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (events)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.EventId as eventid1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=events,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'events eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=events,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from events eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from events eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from events eventdb0_
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73aff8f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41a6d121
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@19f040ba
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61533ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5395ea39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1136b469
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b78fdb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1b9c1b51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1a5b8489
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34cf5a97
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30af7377
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d58c727
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52a36910
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54da32dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d782abe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6df7988f
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23592946]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table eventdb
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53d13cd4, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@571a01f9]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from eventdb where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from eventdb eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update eventdb set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from eventdb where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e34b127]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@637791d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists eventdb CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4792f119] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table eventdb (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@562919fe] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5696c927
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 3d382622-ccdb-49fd-80a6-aeda1a031167 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrb, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrc, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@55846997
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} eventdb eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [eventdb]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [eventdb eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (eventdb)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.EventId as eventid1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=eventdb,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'eventdb eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=eventdb,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from eventdb eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from eventdb eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from eventdb eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51e37590
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73aff8f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40620d8e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b8ee898
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54acff7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51745f40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6dba847b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@433e536f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61f2c3f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@456be73c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41a6d121
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@19f040ba
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d6cb754
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@213deac2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1450078a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@796d3c9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64e1dd11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e45f87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45394b31
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@272a179c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56781d96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@644abb8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3605c4d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ad11a56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c9d82f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61533ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5395ea39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15723761
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@710d7aff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36bc415e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ebadd3d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a699efa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1136b469
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@75f2099
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b78fdb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1b9c1b51
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e6fce47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1a5b8489
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@34b9fc7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67ec8477
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34cf5a97
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a1c0752
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d39f2d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@175acfb2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30af7377
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d2d99fc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d58c727
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52a36910
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54da32dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d782abe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6df7988f
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23592946]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table eventdb
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53d13cd4, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@571a01f9]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from eventdb where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from eventdb eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update eventdb set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from eventdb where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e8fb66f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fde8f7c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists eventdb CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4cc01c7f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table eventdb (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@76f2dad9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@58eac00e
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: a1a9bc89-9e93-49a7-a5d1-0a042aadb2ae (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrb, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=1, alert=false, host=12345, id=scsmbstgrc, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@36f6e521
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c42b421
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@39aa45a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c060c8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@352e612e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@6f8d7714
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@6f8d7714
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f8d7714
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@601cbd8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@601cbd8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5e76a2bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5e76a2bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@2fb5fe30
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@2fb5fe30
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5b6e8f77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6e28bb87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@35e478f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35e478f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@5d05ef57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5d05ef57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6ef7623
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6ef7623
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41477a6d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41477a6d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@591fd34d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@591fd34d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ecd665
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ecd665
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3eba57a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3eba57a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@a10c1b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a10c1b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@58065f0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58065f0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58065f0c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@726a6b94
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@69ce2f62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69ce2f62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69ce2f62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@466d49f0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@72458efc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@2e3a5237
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e3a5237
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b44b63d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b44b63d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17ae7628
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@5432050b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@5432050b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@5432050b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c779e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c779e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c779e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@5328a9c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@715fb77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1eea9d2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1eea9d2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1eea9d2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6d91790b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6d91790b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6d91790b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@72805168
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@baf1bb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@baf1bb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3703bf3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@40021799
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@40021799
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@19593091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19593091
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e742e4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@71c905a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@2f879bab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@6872f9c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6872f9c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21f9277b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@201aa8c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d58c727
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@52a36910
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a095ec0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54da32dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d782abe
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@23592946]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table eventdb
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53d13cd4, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@129fed45] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@571a01f9]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from eventdb where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from eventdb eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update eventdb set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from eventdb where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e34b127]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@637791d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists eventdb CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4792f119] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table eventdb (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@562919fe] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5696c927
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 7f165acc-27ed-4027-aa65-cb4df673481a (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@805e72e
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} eventdb eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [eventdb]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [eventdb eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (eventdb)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.EventId as eventid1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=eventdb,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'eventdb eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=eventdb,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from eventdb eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from eventdb eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f5b5ca4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f6bcf87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67207d8a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2189e7a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7c2327fa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b60c3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@2d0bfb24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@38499e48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@27068a50
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@baf1bb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3703bf3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@40021799
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@afb5821
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bff2185
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c20ffa8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7fedfe27
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f879bab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@46c00568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ccd751
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e48d38] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c2b58c0]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table eventdb
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(EventId)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=EventDuration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(eventdb), mappingColumn=Type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [eventid] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@480ad82c, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e48d38] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5e0ec41f]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select EventId from eventdb where EventId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.EventId, eventdb_.Alert as alert2_0_, eventdb_.EventDuration as eventdur3_0_, eventdb_.Host as host4_0_, eventdb_.Type as type5_0_ from eventdb eventdb_ where eventdb_.EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update eventdb set Alert=?, EventDuration=?, Host=?, Type=? where EventId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from eventdb where EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e8fb66f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fde8f7c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {eventid1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.EventId as eventid1_0_0_, eventdb0_.Alert as alert2_0_0_, eventdb0_.EventDuration as eventdur3_0_0_, eventdb0_.Host as host4_0_0_, eventdb0_.Type as type5_0_0_ from eventdb eventdb0_ where eventdb0_.EventId=?
[main] DEBUG org.hibernate.SQL  - drop table if exists eventdb CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4cc01c7f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table eventdb (EventId varchar(255) not null, Alert boolean, EventDuration bigint, Host varchar(255), Type varchar(255), primary key (EventId))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@76f2dad9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@58eac00e
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: d4f9476c-c4c8-469c-87d7-d7563c75cca3 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into eventdb (Alert, EventDuration, Host, Type, EventId) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2afdf6b7
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} eventdb eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [eventdb]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [eventdb eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (eventdb)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.EventId as eventid1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=eventdb,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'eventdb eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=eventdb,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from eventdb eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.EventId as eventid1_0_, eventdb0_.Alert as alert2_0_, eventdb0_.EventDuration as eventdur3_0_, eventdb0_.Host as host4_0_, eventdb0_.Type as type5_0_ from eventdb eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f5b5ca4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f6bcf87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67207d8a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2189e7a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7c2327fa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b60c3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@2d0bfb24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@38499e48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@27068a50
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@baf1bb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3703bf3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@40021799
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@afb5821
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bff2185
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c20ffa8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7fedfe27
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f879bab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@46c00568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ccd751
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e48d38] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c2b58c0]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=create-drop, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7b676112, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e48d38] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@348ad293]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d17a3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d86b9d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.SQL  - drop table if exists EventDB CASCADE 
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2a50b32d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.SQL  - create table EventDB (id varchar(255) not null, alert boolean not null, duration bigint not null, host varchar(255), type varchar(255), primary key (id))
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@171dc7c3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@149c39b
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: b5ace428-4aad-4ab8-b2df-c771d5e45ddd (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@51ff3c4b
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@5dda6f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@5dda6f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5dda6f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@fff25f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a021cb9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a9419d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5769e7ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5769e7ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5769e7ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@62f87c44
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@62f87c44
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62f87c44
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@327120c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@327120c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@327120c8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@50305a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@50305a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50305a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6bc28a83
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6bc28a83
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6bc28a83
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@70d2e40b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@70d2e40b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70d2e40b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@70e29e14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@70e29e14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70e29e14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5d8445d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5d8445d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29ad44e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29ad44e3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@14bb2297
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@14bb2297
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57f791c6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@30c31dd7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@70e659aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@70e659aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7249dadf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7249dadf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@5528a42c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5528a42c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@29539e36
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@29539e36
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@49a64d82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@49a64d82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@77b21474
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@77b21474
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39c11e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@39c11e6c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@329a1243
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@329a1243
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f40a43
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f40a43
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@588ab592
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@588ab592
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@5949eba8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5949eba8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@320e400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@320e400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@320e400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c444798
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@54e7391d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@54e7391d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@54e7391d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@29d2d081
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1bc53649
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@4d0402b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d0402b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3f2049b6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f2049b6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c321bdb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c321bdb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@1e392345
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e392345
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6831d8fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6831d8fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cbf9e9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@3bb9efbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bb9efbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@3bb9efbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50d68830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50d68830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50d68830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@a23a01d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@24b52d3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@47a64f7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@47a64f7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@47a64f7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70f43b45
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70f43b45
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70f43b45
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@2c282004
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@53bc1328
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@c20be82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c20be82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@622ef26a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@4102b1b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4102b1b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@271f18d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@271f18d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@eadb475
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cad8b7d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@308a6984
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@e27ba81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e27ba81
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62577d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49bd54f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b5f8707
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@772485dd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a12c728
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d829787
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose start
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose synched
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose script done
[main] INFO  hsqldb.db.HSQLDB754843A2FC.ENGINE  - checkpointClose end
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fad41be] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6dcd5639]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=validate, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c6333cd, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fad41be] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3062f9f4]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4232b34a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@594d9f07]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@72976b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7980cf2c
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: eadf5d0a-e6ee-430b-86e3-702b5281e56a (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10102 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6b1b19cf
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.22.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f63c44f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f5b5ca4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d035be3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@5f212d84
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4dd94a58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e647e59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27cbfddf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65f00478
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@56febdc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f2c488
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54534abf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c6e0a08
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37d00a23
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c5a54b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f6bcf87
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e6b9a95
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7180e701
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@757194dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@267bbe1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@60f2e0bd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@53667cbe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@577f9109
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4642b71d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3eb631b8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2bc12da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5491f68b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74fef3f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d8539de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67207d8a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b152928
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2189e7a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7c2327fa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@187eb9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77128dab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60baef24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43b0ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a0a9fa5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b60c3e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@301d8120
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e134896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@2d0bfb24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@38499e48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@42f22995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29182679
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6a84bc2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@27068a50
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e9803c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60921b21
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a567e72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d84cb86
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@baf1bb3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3703bf3c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@40021799
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67a056f1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@afb5821
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bff2185
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c20ffa8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7fedfe27
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f879bab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d4664d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@46c00568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56ccd751
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db-data/mydatabase]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=, user=sa}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 1 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : HSQL Database Engine
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : HSQL Database Engine Driver
    version : 2.5.0
      major : 2
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@444cc791] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c5c616f]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name EventDB
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity EventDB on table EventDB
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=id, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, assigned, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=alert, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property alert with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:alert]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property alert
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property duration with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:duration]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property duration
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=host, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property host with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:host]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property host
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EventDB), mappingColumn=type, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property type with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [EventDB:type]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for type
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property type
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for alert
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for duration
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for host
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for type
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [eventdb]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.HSQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.dbcp.maxIdle=10, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=/Users/shashank/Desktop/Events/target/classes:/Users/shashank/.m2/repository/org/hsqldb/hsqldb/2.5.0/hsqldb-2.5.0.jar:/Users/shashank/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar:/Users/shashank/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar:/Users/shashank/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/shashank/.m2/repository/org/hibernate/hibernate-core/5.4.22.Final/hibernate-core-5.4.22.Final.jar:/Users/shashank/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/shashank/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/shashank/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/shashank/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/Users/shashank/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/shashank/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/shashank/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:/Users/shashank/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/shashank/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/shashank/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/shashank/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/shashank/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/shashank/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/shashank/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/shashank/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/shashank/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://openjdk.java.net/, user.timezone=Europe/Dublin, hibernate.dbcp.maxWaitMillis=-1, os.name=Mac OS X, java.vm.specification.version=11, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=IE, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib, sun.java.command=EventProcessing, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/shashank, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, hibernate.hbm2ddl.auto=validate, connection.password=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.7+8-LTS, user.name=shashank, path.separator=:, hibernate.connection.username=****, hibernate.dbcp.minIdle=5, os.version=10.13.6, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:file:db-data/mydatabase, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, hibernate.dbcp.initialSize=5, hibernate.dbcp.maxTotal=20, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/dt/n1_ppxdj7_1_nmpq9zd315fm0000gn/T/, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/Users/shashank/Desktop/Events, os.arch=x86_64, connection.username=sa, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=org.hsqldb.jdbcDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f1a16fe, java.library.path=/Users/shashank/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.7+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=1, connection.url=jdbc:hsqldb:file:db-data/mydatabase, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@444cc791] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e67f5f2]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [EventDB] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: EventDB
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id from EventDB where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select eventdb_.id, eventdb_.alert as alert2_0_, eventdb_.duration as duration3_0_, eventdb_.host as host4_0_, eventdb_.type as type5_0_ from EventDB eventdb_ where eventdb_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update EventDB set alert=?, duration=?, host=?, type=? where id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from EventDB where id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca3d25b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [NONE]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4596d0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : alert
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : duration
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : host
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : type
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=EventDB)
    - Returns
       - EntityReturnImpl(entity=EventDB, querySpaceUid=<gen:0>, path=EventDB)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=EventDB)
          - SQL table alias mapping - eventdb0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity EventDB [READ]: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity EventDB: select eventdb0_.id as id1_0_0_, eventdb0_.alert as alert2_0_0_, eventdb0_.duration as duration3_0_0_, eventdb0_.host as host4_0_0_, eventdb0_.type as type5_0_0_ from EventDB eventdb0_ where eventdb0_.id=?
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@365afe87] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@577bf0aa
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: c82d371e-357d-4da8-8bf4-6f0b1badb825 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgra, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=5, alert=true, host=12345, id=scsmbstgra, type=APPLICATION_LOG}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrb, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=3, alert=false, host=null, id=scsmbstgrb, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: scsmbstgrc, using strategy: org.hibernate.id.Assigned
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - EventDB{duration=8, alert=true, host=null, id=scsmbstgrc, type=null}
[main] DEBUG org.hibernate.SQL  - insert into EventDB (alert, duration, host, type, id) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3260)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3787)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:348)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 26 more
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: -104, SQLState: 23505
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - integrity constraint violation: unique constraint or index violation; SYS_PK_10096 table: EVENTDB
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl  - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at EventProcessing.writeToDb(EventProcessing.java:80)
	at EventProcessing.lambda$main$1(EventProcessing.java:46)
	at java.base/java.util.HashMap.forEach(HashMap.java:1336)
	at EventProcessing.main(EventProcessing.java:34)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6a98f353
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'EventDB'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : EventDB (<no alias>) -> eventdb0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} EventDB eventdb0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity EventDB): [EventDB]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(EventDB)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [EventDB eventdb0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EventDB)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'eventdb0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}}
    |  \-[SQL_TOKEN] SqlFragment: 'eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[eventdb0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EventDB eventdb0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EventDB,tableAlias=eventdb0_,origin=null,columns={,className=EventDB}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from EventDB
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select eventdb0_.id as id1_0_, eventdb0_.alert as alert2_0_, eventdb0_.duration as duration3_0_, eventdb0_.host as host4_0_, eventdb0_.type as type5_0_ from EventDB eventdb0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgra]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 5
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = 12345
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = APPLICATION_LOG
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgra]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 3
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrb]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `alert` : value = true
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`alert`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `duration` : value = 8
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`duration`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `host` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`host`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `type` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`type`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [EventDB#scsmbstgrc]
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] INFO  EventProcessing  - done!
